{
  "openapi": "3.0.0",
  "servers": [
    {
      "description": "Production Server",
      "url": "https://recorder-service.onrender.com/api"
    },
    {
      "description": "Development Server",
      "url": "http://localhost:3001/api"
    }
  ],
  "info": {
    "title": "ScavengerHunt RESTful API",
    "description": "The ScavengerHunt API is designed for managing a picture puzzle game where players move pieces around to create the perfect image. Players compete to complete puzzles in the shortest time and with the fewest moves possible. This API provides a set of endpoints to support various game-related functionalities.",
    "contact": {
      "email": "nicholasikiroma@gmail.com"
    },
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Scavengers",
      "description": "Scavengers are players of the game. Each Scavenger is granted access to the game when they provide a valid access code."
    },
    {
      "name": "Score Board",
      "description": "The score board holds records of the time and number of moves it takes for scavengers (players) to complete a puzzle."
    },
    {
      "name": "Access Codes",
      "description": "Unique codes that grant players access to the game. Each code can be used by preset number of users."
    }
  ],
  "paths": {
    "/scavengers": {
      "get": {
        "summary": "Fetch all Players",
        "description": "Fetch all players",
        "operationId": "fetchAllScavengers",
        "tags": [
          "Scavengers"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Scavengers"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "401": {
            "description": "Forbideen",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "404": {
            "description": "User not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessible entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create new player",
        "description": "Creates a new Scavenger instance",
        "operationId": "createScavenger",
        "tags": [
          "Scavengers"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "walletAddress": {
                    "type": "string"
                  },
                  "sessionToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Scavengers"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "401": {
            "description": "Forbideen",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "404": {
            "description": "User not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      }
    },
    "/scavengers/{walletAddress}": {
      "get": {
        "summary": "Fetch player by wallet address",
        "description": "Fetch one",
        "operationId": "fetchBywalletAddress",
        "tags": [
          "Scavengers"
        ],
        "parameters": [
          {
            "name": "walletAddress",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "crypto wallet address"
            },
            "description": "TCrypto wallet associated with user"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Scavengers"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "401": {
            "description": "Forbideen",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "404": {
            "description": "User not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      }
    },
    "/auth": {
      "post": {
        "summary": "Validate Access Code",
        "description": "Validates Cipher and access code stored in the database",
        "operationId": "validateAccessCode",
        "tags": [
          "Access Codes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cipher": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AccessCodes"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "401": {
            "description": "Forbideen",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "404": {
            "description": "User not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      }
    },
    "/auth/generate-ciphers/{apiKey}": {
      "post": {
        "summary": "Generate access codes for players.",
        "description": "Generate access codes",
        "operationId": "generateCiphers",
        "tags": [
          "Access Codes"
        ],
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "Base64URL Safe"
            },
            "description": "Secret key generated"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "maxScavengers": {
                    "type": "number",
                    "format": "Integer",
                    "description": "The number of Scavengers(players) that can use a particular access code"
                  },
                  "numberOfTokens": {
                    "type": "number",
                    "format": "Integer",
                    "description": "The number of access codes to be generated"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "401": {
            "description": "Forbideen",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "404": {
            "description": "Access Code not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      }
    },
    "/scores": {
      "post": {
        "summary": "Create or Update User Score",
        "description": "Create or modify a gameScore instance",
        "operationId": "createScore",
        "tags": [
          "Score Board"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "walletAddress": {
                    "type": "string"
                  },
                  "timeCompleted": {
                    "type": "number",
                    "format": "float",
                    "example": 40.3
                  },
                  "numberOfMoves": {
                    "type": "number",
                    "format": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response when an existing score instance is modified",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Score Updated"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Successful response when a new score instance is created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Score Created"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "401": {
            "description": "Forbideen",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "404": {
            "description": "User not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Fetch of all players",
        "description": "Fetch all scores",
        "operationId": "fetchAllScores",
        "tags": [
          "Score Board"
        ],
        "responses": {
          "200": {
            "description": "Successful response when an existing score instance is modified",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GameScores"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "401": {
            "description": "Forbideen",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "404": {
            "description": "User not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      }
    },
    "/scores/{walletAddress}": {
      "get": {
        "summary": "Fetch score associated with one wallet",
        "description": "Fetch score by wallet address",
        "operationId": "fetchUserScore",
        "tags": [
          "Score Board"
        ],
        "parameters": [
          {
            "name": "walletAddress",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Wallet address of player"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GameScores"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "401": {
            "description": "Forbideen",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "404": {
            "description": "User not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      }
    },
    "/scores/top": {
      "get": {
        "summary": "Fetch the top 200 players",
        "description": "Fetch detail of video",
        "operationId": "fetchVideoDetail",
        "tags": [
          "Score Board"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GameScores"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "401": {
            "description": "Forbideen",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "404": {
            "description": "User not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Scavengers": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "9d51512f-be80-4095-bcf8-94310e891efe"
          },
          "walletAddress": {
            "type": "string",
            "example": "user@example.com"
          },
          "code": {
            "type": "string",
            "format": "uuid",
            "example": "9d51512f-be80-4095-bcf8-94310e891efe"
          },
          "role": {
            "type": "string",
            "enum": [
              "scavenger",
              "admin"
            ],
            "example": "scavenger"
          }
        },
        "required": [
          "code",
          "walletAddress"
        ]
      },
      "AccessCodes": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "maxScavengers": {
            "type": "integer",
            "example": 20
          },
          "currentScavengers": {
            "type": "number",
            "example": 1
          },
          "code": {
            "type": "string",
            "example": "jdjjfjf"
          }
        },
        "required": [
          "code",
          "maxScavengers",
          "currentScavengers"
        ]
      },
      "GameScores": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "9d51512f-be80-4095-bcf8-94310e891efe"
          },
          "walletAddress": {
            "type": "string",
            "example": "9d51512f-be80-4095-bcf8-94310e891efe"
          },
          "timeCompleted": {
            "type": "number",
            "format": "float",
            "example": 20.5
          },
          "numberOfMoves": {
            "type": "number",
            "format": "integer",
            "example": 1
          }
        },
        "required": [
          "walletAddress",
          "numberOfMoves",
          "timeCompleted"
        ]
      },
      "Errors": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Internal Server Error",
                "description": "Describes the type of error"
              },
              "statusCode": {
                "type": "number",
                "example": 500,
                "description": "Http status code assocuated with the error"
              },
              "message": {
                "type": "string",
                "example": "Invalid access code",
                "description": "Provides more information about the error experience"
              }
            }
          }
        }
      }
    }
  }
}